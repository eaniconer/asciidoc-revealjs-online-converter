<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" >
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Slides online editor</title>

    <style>
        #container {
            /* Monaco editor would be automatically adjusted when browser is resized */
            overflow: hidden;
        }
    </style>

    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/lodash@4.17.20/lodash.min.js"></script>
    <script type="text/javascript" src="https://unpkg.com/monaco-editor@0.8.3/min/vs/loader.js"></script>
    <script>
        require.config({ paths: { 'vs': 'https://unpkg.com/monaco-editor@0.8.3/min/vs' }});

        // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites
        // the default worker url location (used when creating WebWorkers). The problem here is that
        // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of
        // a web worker through a same-domain script
        window.MonacoEnvironment = {
            getWorkerUrl: function(workerId, label) {
            return `data:text/javascript;charset=utf-8,${encodeURIComponent(`
                self.MonacoEnvironment = {
                baseUrl: 'https://unpkg.com/monaco-editor@0.8.3/min/'
                };
                importScripts('https://unpkg.com/monaco-editor@0.8.3/min/vs/base/worker/workerMain.js');`
            )}`;
            }
        };

        var RENDER_SLIDES_AFTER_CHANGES_TIMEOUT = 1000;
        var SLIDE_ANCHOR_SEPARATOR = "#/";
        var SAMPLE_SLIDES_TEXT = [
            '= Title slide',
            '',
            '== Second slide',
            '',
            'Some text'
        ].join('\n');

        function extractCurrentSlideAnchor(url) {
            var poundIdx = url.lastIndexOf(SLIDE_ANCHOR_SEPARATOR);
            if (poundIdx == -1) {
                return "";
            }

            return url.substring(poundIdx + 2);
        }

        function getRenderedSlidesIframe(document) {
            return document.querySelector("#rendered-slides-iframe");
        }

        function saveSlidesToServer(slidesSourceCode, callback) {
            fetch("save", { 
                method: "POST", 
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ text: slidesSourceCode }) 
            }).then((response) => response.text().then(callback));
        }

        function renderSlidesToIframe(slidesSourceCode) {
            var slidesFrame = getRenderedSlidesIframe(document);
            var currentSlidesAddress = slidesFrame.contentWindow.location.href;
            var currentSlideAnchor = extractCurrentSlideAnchor(currentSlidesAddress);

            saveSlidesToServer(slidesSourceCode, (saved_slides_id) => {
                var newSlidesAddress = "/render?slides_id=" + saved_slides_id;

                slidesFrame.src = newSlidesAddress + SLIDE_ANCHOR_SEPARATOR + currentSlideAnchor;
            })
        }

        require(["vs/editor/editor.main"], function () {
            var editor = monaco.editor.create(document.getElementById('container'), {
                value: SAMPLE_SLIDES_TEXT,
                language: 'asciidoc',
                wordWrap: "on"
            });

            // We want to adsjust the editor when the window is resized
            window.onresize = function() { editor.layout() };

            function fetchAndRenderSlides() {
                renderSlidesToIframe(editor.getValue());
            }

            // Render current slides for the first time
            fetchAndRenderSlides();

            editor.onDidChangeModelContent(_.debounce(fetchAndRenderSlides, RENDER_SLIDES_AFTER_CHANGES_TIMEOUT));
        });
    </script>
</head>
<body>
    <h1>Asciidoc-Revealjs Converter Online editor</h1>
    <div style="display: flex;">
        <div id="container" style="flex:50%;height:600px;border:1px solid grey"></div>
        <iframe id="rendered-slides-iframe" style="flex:50%" src=""></iframe>
    </div>
</body>
</html>